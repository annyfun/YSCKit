//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//  FORMATED!
//

#import <Availability.h>

#ifndef __IPHONE_7_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__
    //常用第三方库
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import <BlocksKit/BlocksKit.h>
    #import <BlocksKit+UIKit.h>
    #import <BlocksKit+MessageUI.h>
    #import <MBProgressHUD/MBProgressHUD.h>
    #import <POP/POP.h>
    #import "PureLayout.h"

    //定义固定常量和公用枚举
    #import "UrlConstants.h"
    #import "UMengConstants.h"
    #import "EnumType.h"

    //系统类扩展
    #import "NSObject+Addition.h"
    #import "UITextField+Additions.h"
    #import "UIView+Addition.h"
    #import "NSDate+Additions.h"
    #import "NSTimer+Addition.h"
    #import "UIColor+Expanded.h"
    #import "NSString+Addition.h"
    #import "UIImageView+Additions.h"

    //Utils
    #import "FileUtils.h"
    #import "ImageUtils.h"
    #import "CommonUtils.h"

    //Manager
    #import "PlayAudioManager.h"
    #import "ReachabilityManager.h"
    #import "AppConfigManager.h"
    #import "StorageManager.h"
    #import "LogManager.h"
    #import "AFNManager.h"
    #import "SNSShareManager.h"
    #import "ShowPhotosManager.h"

    //自定义view(对于全局需要使用的自定义view放这里)

    //业务逻辑相关
    #import "DataModel.h"
    #import "RegionModel.h"
    #import "Login.h"
    #import "BaseViewController.h"
    #import "BaseTableViewCell.h"
    #import "BaseCollectionViewCell.h"
    #import "BaseTableViewHeaderFooterView.h"
    #import "BaseCollectionHeaderFooterView.h"
#endif


#define WeakSelfType __weak __typeof(&*self)

/**
 *  重新定义NSLog
 */
//控制调试信息的输出
#define DEBUGMODEL      [[NSUserDefaults standardUserDefaults] boolForKey:@"DEBUG"]
#define TGO_DEBUG_LOG   1  //只有在 非DEBUG 模式下起作用  0-关闭调试输出和日志记录功能  1-打开控制台输出和日志文件记录功能
#define TGO_APPSTORE    0  //0-用企业证书打包版本  1-appstore审核版本

#define __NSLog(s, ...) do { \
NSString *logString = [NSString stringWithFormat:@"[%@(%d)] %@",[[NSString stringWithUTF8String:__FILE__] lastPathComponent],__LINE__,[NSString stringWithFormat:(s), ##__VA_ARGS__]]; \
if ( DEBUGMODEL ) { \
NSLog(@"%@", logString);\
[LogManager saveLog:logString];\
} \
else { \
if (TGO_DEBUG_LOG) { \
[LogManager saveLog:logString]; \
NSLog(@"%@", logString); \
} \
} \
} while (0)

#define NSLog(...) __NSLog(__VA_ARGS__)


/**
 *  判断设备的相关参数
 */
#pragma mark - Device

#define IOS_VERSION              ([[[UIDevice currentDevice] systemVersion] floatValue])
#define IOS7_OR_LATER           __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_7_0
#define IOS8_OR_LATER           __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_8_0
#define SCREEN_WIDTH            ([UIScreen mainScreen].bounds.size.width) //屏幕的宽度(point)
#define SCREEN_HEIGHT           ([UIScreen mainScreen].bounds.size.height)//屏幕的高度(point)
#define STATUSBAR_HEIGHT        20.0f
#define NAVIGATIONBAR_HEIGHT    44.0f
#define TITLEBAR_HEIGHT         64.0f       //等于STATUSBAR_HEIGHT + NAVIGATIONBAR_HEIGHT
#define TABBAR_HEIGHT           49.0f
#define KEYBOARD_HEIGHT         216.0f      //默认键盘高度
#define XIB_WIDTH               640.0f      //xib布局时的宽度(point)，主要用于计算缩放比例

/**
 *  定义单例
 */
#pragma mark - Singleton

#define DEFINE_SHARED_INSTANCE_USING_BLOCK(block) \
static dispatch_once_t pred = 0; \
__strong static id _sharedObject = nil; \
dispatch_once(&pred, ^{ \
_sharedObject = block(); \
}); \
return _sharedObject;


/**
 *  代码段简写
 *
 */
#pragma mark - special methods

#define USERID                          [[Login sharedInstance] userId]
#define TOKEN                           ([Login sharedInstance].token == nil ? @"" : [Login sharedInstance].token)
#define ISLOGGED                        [[Login sharedInstance] isLogged]
#define USER                            [Login sharedInstance].user
#define RGB(r, g, b)                    [UIColor colorWithRed:r / 255.0f green:g / 255.0f blue:b / 255.0f alpha:1.0f]
#define RGBA(r, g, b, a)                [UIColor colorWithRed:r / 255.0f green:g / 255.0f blue:b / 255.0f alpha:a]
#define RGBHEX(hexstring)               [UIColor colorWithHexString:[NSString replaceString:hexstring byRegex:@"[#]" to:@""]]
#define ViewInXib(_xibName, _index)     [[[NSBundle mainBundle] loadNibNamed:_xibName owner:nil options:nil] objectAtIndex:_index]
#define NavigationViewController(x)     [[UINavigationController alloc]initWithRootViewController:[[NSClassFromString(x) alloc] initWithNibName:nil bundle:nil]]
#define ViewController(x)               [[NSClassFromString(x) alloc] initWithNibName:x bundle:nil]
#define AppVersion                      [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"]
#define BundleVersion                   [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleVersion"]
#define Welcome                         [NSString stringWithFormat:@"Welcome_V%@", AppVersion]
#define SkipVersion                     [NSString stringWithFormat:@"SkipVersion_V%@", AppVersion]
#define KeyWindow                       [UIApplication sharedApplication].keyWindow
#define FileDefaultManager              [NSFileManager defaultManager]
#define AppProgramPath(x)               [[FileUtils DirectoryPathOfBundle] stringByAppendingPathComponent:x]
#define ReturnWhenObjectIsEmpty(object)             if ([NSObject isEmpty:object]) { return ;    }
#define ReturnNilWhenObjectIsEmpty(object)          if ([NSObject isEmpty:object]) { return nil; }
#define ReturnEmptyWhenObjectIsEmpty(object)        if ([NSObject isEmpty:object]) { return @""; }
#define ReturnYESWhenObjectIsEmpty(object)          if ([NSObject isEmpty:object]) { return YES; }
#define ReturnNOWhenObjectIsEmpty(object)           if ([NSObject isEmpty:object]) { return NO;  }
#define ReturnZeroWhenObjectIsEmpty(object)         if ([NSObject isEmpty:object]) { return 0;  }
#define StretchImageOfTopicReply        [ImageUtils stretchImage:[UIImage imageNamed:@"bg_balloon_white"] withPoint:CGPointMake(20, 20)]
#define DefaultAvatarImage              [UIImage imageNamed:@"default_avatar"]
#define DefaultProductImage             [UIImage imageNamed:@"default_product"]
#define DefaultImage                    [UIImage imageNamed:@"default_image"]
#define GenderMaleImage                 [UIImage imageNamed:@"icon_gender_male"]
#define GenderFemaleImage               [UIImage imageNamed:@"icon_gender_female"]
#define Trim(x)                         [NSString trimString:x]
#define Class(x)                        [x class]
#define FormatPrice(x)                  ([NSString stringWithFormat:@"￥%.2f", x])
#define RandomInt(from,to)           ((int)((from) + arc4random() % ((to)-(from) + 1)))  //随机数 [from,to] 之间



/**
 *  自动布局相关代码段简写
 *
 */
#define AUTOLAYOUT_SCALE                (SCREEN_WIDTH / XIB_WIDTH)          //缩放比例 (当前屏幕的真实宽度point / xib布局的宽度point)
#define AUTOLAYOUT_LENGTH(x)            ((x) * AUTOLAYOUT_SCALE)            //计算缩放后的大小point
#define AUTOLAYOUT_LENGTH_W(x,w)        ((x) * (SCREEN_WIDTH / (w)))        //计算任意布局的真实大小point
#define AUTOLAYOUT_SIZE_WH(w,h)         CGSizeMake(AUTOLAYOUT_LENGTH(w), AUTOLAYOUT_LENGTH(h))
#define AUTOLAYOUT_SIZE(size)           CGSizeMake(AUTOLAYOUT_LENGTH(size.width), AUTOLAYOUT_LENGTH(size.height))//计算自动布局后的size
#define AUTOLAYOUT_FONT(f)              ([UIFont systemFontOfSize:(f * AUTOLAYOUT_SCALE)])


/**
 *  颜色及相关默认值定义
 */
#pragma mark - Color defines

#define kDefaultViewColor               RGB(239, 239, 239)      //self.view的默认背景颜色
#define kDefaultTitleBarColor           RGB(234, 106, 84)       //导航栏的默认颜色
#define kDefaultStatusBarColor          RGB(234, 106, 84)       //状态栏默认颜色
#define kDefaultNaviBarColor            RGBA(236, 236, 236, 1)   //设置navigationBar默认颜色(包括了StatusBar)
#define kDefaultTextColor               RGB(100, 100, 100)      //设置文字默认颜色
#define kDefaultTextColor1              RGB(122, 122, 122)
#define kDefaultEmptyTextColor          RGB(122, 122, 122)      //列表为空时的提醒文字颜色
#define kDefaultSeperatorLineColor      RGB(176, 176, 176)      //设置间隔线的默认颜色



/**
 *  字体及相关默认值定义
 */
#pragma mark - Font defines

#define kDefaultTextFont10              [UIFont systemFontOfSize:10]
#define kDefaultTextFont11              [UIFont systemFontOfSize:11]
#define kDefaultTextFont12              [UIFont systemFontOfSize:12]
#define kDefaultTextFont13              [UIFont systemFontOfSize:13]
#define kDefaultTextFont14              [UIFont systemFontOfSize:14]        //设置默认字体大小
#define kDefaultTextFont15              [UIFont systemFontOfSize:15]        //设置默认字体大小
#define kDefaultTextFont16              [UIFont systemFontOfSize:16]        //设置默认字体大小
#define kDefaultBoldTextFont14          [UIFont boldSystemFontOfSize:14]    //设置默认的粗体字体大小
#define kDefaultBoldTextFont15          [UIFont boldSystemFontOfSize:15]
#define kDefaultBoldTextFont16          [UIFont boldSystemFontOfSize:16]
#define kDefaultBoldTextFont17          [UIFont boldSystemFontOfSize:17]

/**
 *  定义常量
 */
#pragma mark - define constants

#define kDefaultPageStartIndex          0
#define kDefaultPageSize                20
#define kDefaultAnimationDuration01     0.1f
#define kDefaultAnimationDuration02     0.2f
#define kDefaultAnimationDuration03     0.3f
#define kDefaultAnimationDuration04     0.4f
#define kDefaultAnimationDuration05     0.5f
#define kDefaultAnimationDuration06     0.6f
#define kDefaultAnimationDuration07     0.7f
#define kDefaultAnimationDuration08     0.8f
#define kDefaultAnimationDuration09     0.9f
#define kDefaultAnimationDuration10     1.0f
#define kDefaultAnimationDuration15     1.5f
#define kDefaultAnimationDuration20     2.0f
#define kAppScheme                      @"TGO8"
#define kCellIdentifier                 @"Cell"
#define kFooterIdentifier               @"Footer"
#define kHeaderIdentifier               @"Header"
#define kItemCellIdentifier             @"ItemCell"             //UICollectionView要用的
#define kProductCollectionHeaderView    @"CollectionHeaderView" //UICollectionView要用的
#define kProductCollectionFooterView    @"CollectionFooterView" //UICollectionView要用的
#define kAppChannelAppStore             @"AppStore"     //定义渠道为AppStore
#define kAppChannelTgogoDotNet          @"TgogoDotNet"  //定义渠道为官网
#define kAppChannelDebug                @"Debug"        //定义渠道为测试环境


/**
 *  注册通知与发送通知
 */
#pragma mark - Notification

#define addNObserver(_selector,_name)               ([[NSNotificationCenter defaultCenter] addObserver:self selector:_selector name:_name object:nil])
#define addNObserverWithObj(_selector,_name,_obj)   ([[NSNotificationCenter defaultCenter] addObserver:self selector:_selector name:_name object:_obj])
#define removeNObserver(_name)                      ([[NSNotificationCenter defaultCenter] removeObserver:self name:_name object:nil])
#define removeAllObservers(_self)                   ([[NSNotificationCenter defaultCenter] removeObserver:_self])
#define postN(_name)                                ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:nil userInfo:nil])
#define postNWithObj(_name,_obj)                    ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:_obj userInfo:nil])
#define postNWithInfo(_name,_info)                  ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:nil userInfo:_info])


#pragma mark - 地址页面(涉及)
#define postNotificationName(name)    [[NSNotificationCenter defaultCenter] postNotificationName:name object:nil]


/**
 *  定义通知
 */
#pragma mark - Notification Name

#define kNotificationRefreshHome        @"kNotificationRefreshHome"
#define kNotificationRefreshMicroBar    @"kNotificationRefreshMicroBar"
#define kNotificationRefreshUserCenter  @"kNotificationRefreshUserCenter"
