//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//  FORMATED!
//

#import <Availability.h>

#ifndef __IPHONE_7_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__
    //常用第三方库
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import <BlocksKit/BlocksKit.h>
    #import <BlocksKit+UIKit.h>
    #import <BlocksKit+MessageUI.h>
    #import <MBProgressHUD/MBProgressHUD.h>
    #import <POP/POP.h>
    #import <FMDB/FMDB.h>
    #import "PureLayout.h"

    //定义固定常量和公用枚举
    #import "Constants.h"
    #import "UrlConstants.h"
    #import "UMengConstants.h"
    #import "EnumType.h"

    //系统类扩展
    #import "NSObject+Addition.h"
    #import "UITextField+Additions.h"
    #import "UIView+Addition.h"
    #import "NSDate+Additions.h"
    #import "NSTimer+Addition.h"
    #import "UIColor+Expanded.h"
    #import "NSString+Addition.h"
    #import "UIImageView+Additions.h"
    #import "UIDevice+Additions.h"

    //Utils
    #import "FileUtils.h"
    #import "ImageUtils.h"
    #import "CommonUtils.h"

    //Manager
    #import "PlayAudioManager.h"
    #import "ReachabilityManager.h"
    #import "AppConfigManager.h"
    #import "StorageManager.h"
    #import "LogManager.h"
    #import "AFNManager.h"
    #import "SNSShareManager.h"
    #import "ShowPhotosManager.h"

    //自定义view(对于全局需要使用的自定义view放这里)

    //业务逻辑相关
    #import "DataModel.h"
    #import "RegionModel.h"
    #import "Login.h"
    #import "BasePullToRefreshTableViewController.h"
    #import "BasePullToRefreshCollectionViewController.h"
    #import "BaseTableViewCell.h"
    #import "BaseCollectionViewCell.h"
    #import "BaseTableViewHeaderFooterView.h"
    #import "BaseCollectionHeaderFooterView.h"
#endif


#define WeakSelfType __weak __typeof(&*self)

/**
 *  重新定义NSLog
 */
//控制调试信息的输出
#define DEBUGMODEL      [[NSUserDefaults standardUserDefaults] boolForKey:@"DEBUG"]
#define DEBUG_LOG       1  //只有在非DEBUG模式下起作用（0-关闭调试输出和日志记录功能  1-打开控制台输出和日志文件记录功能）
#define APPSTORE        0  //0-用企业证书打包版本  1-appstore审核版本

#define __NSLog(s, ...) do { \
NSString *logString = [NSString stringWithFormat:@"[%@(%d)] %@",[[NSString stringWithUTF8String:__FILE__] lastPathComponent],__LINE__,[NSString stringWithFormat:(s), ##__VA_ARGS__]]; \
    if ( DEBUGMODEL ) { \
        NSLog(@"%@", logString);\
        [LogManager saveLog:logString];\
    } \
    else { \
        if (DEBUG_LOG) { \
            [LogManager saveLog:logString]; \
            NSLog(@"%@", logString); \
        } \
    } \
} while (0)

#define NSLog(...) __NSLog(__VA_ARGS__)



/**
 *  定义单例
 */
#pragma mark - Singleton

#define DEFINE_SHARED_INSTANCE_USING_BLOCK(block) \
static dispatch_once_t pred = 0; \
__strong static id _sharedObject = nil; \
dispatch_once(&pred, ^{ \
_sharedObject = block(); \
}); \
return _sharedObject;


/**
 *  代码段简写
 *
 */
#pragma mark - special methods

#define USERID                          ([Login sharedInstance].user.userId == nil ? @"" : [Login sharedInstance].user.userId)
#define TOKEN                           ([Login sharedInstance].token == nil ? @"" : [Login sharedInstance].token)
#define ISLOGGED                        [[Login sharedInstance] isLogged]
#define USER                            [Login sharedInstance].user
#define RGB(r, g, b)                    [UIColor colorWithRed:r / 255.0f green:g / 255.0f blue:b / 255.0f alpha:1.0f]
#define RGBA(r, g, b, a)                [UIColor colorWithRed:r / 255.0f green:g / 255.0f blue:b / 255.0f alpha:a]
#define RGBHEX(hexstring)               [UIColor colorWithHexString:[NSString replaceString:hexstring byRegex:@"[#]" to:@""]]
#define ViewInXib(_xibName, _index)     [[[NSBundle mainBundle] loadNibNamed:_xibName owner:nil options:nil] objectAtIndex:_index]
#define NavigationViewController(x)     [[UINavigationController alloc]initWithRootViewController:[[NSClassFromString(x) alloc] initWithNibName:nil bundle:nil]]
#define ViewController(x)               [[NSClassFromString(x) alloc] initWithNibName:x bundle:nil]
#define AppVersion                      [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"]
#define BundleVersion                   [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleVersion"]
#define Welcome                         [NSString stringWithFormat:@"Welcome_V%@", AppVersion]
#define SkipVersion                     [NSString stringWithFormat:@"SkipVersion_V%@", AppVersion]
#define KeyWindow                       [UIApplication sharedApplication].keyWindow
#define FileDefaultManager              [NSFileManager defaultManager]
#define AppProgramPath(x)               [[FileUtils DirectoryPathOfBundle] stringByAppendingPathComponent:x]


/**
 *  自动布局相关代码段简写
 *
 */
#define AUTOLAYOUT_SCALE                (SCREEN_WIDTH / XIB_WIDTH)          //缩放比例 (当前屏幕的真实宽度point / xib布局的宽度point)
#define AUTOLAYOUT_LENGTH(x)            ((x) * AUTOLAYOUT_SCALE)            //计算缩放后的大小point
#define AUTOLAYOUT_LENGTH_W(x,w)        ((x) * (SCREEN_WIDTH / (w)))        //计算任意布局的真实大小point
#define AUTOLAYOUT_SIZE_WH(w,h)         CGSizeMake(AUTOLAYOUT_LENGTH(w), AUTOLAYOUT_LENGTH(h))
#define AUTOLAYOUT_SIZE(size)           CGSizeMake(AUTOLAYOUT_LENGTH(size.width), AUTOLAYOUT_LENGTH(size.height))//计算自动布局后的size
#define AUTOLAYOUT_EDGEINSETS(t,l,b,r)  UIEdgeInsetsMake(AUTOLAYOUT_LENGTH(t), AUTOLAYOUT_LENGTH(l), AUTOLAYOUT_LENGTH(b), AUTOLAYOUT_LENGTH(r))
#define AUTOLAYOUT_FONT(f)              ([UIFont systemFontOfSize:((f) * AUTOLAYOUT_SCALE)])


/**
 *  注册通知与发送通知
 */
#pragma mark - Notification

#define addNObserver(_selector,_name)               ([[NSNotificationCenter defaultCenter] addObserver:self selector:_selector name:_name object:nil])
#define addNObserverWithObj(_selector,_name,_obj)   ([[NSNotificationCenter defaultCenter] addObserver:self selector:_selector name:_name object:_obj])
#define removeNObserver(_name)                      ([[NSNotificationCenter defaultCenter] removeObserver:self name:_name object:nil])
#define removeAllObservers(_self)                   ([[NSNotificationCenter defaultCenter] removeObserver:_self])
#define postN(_name)                                ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:nil userInfo:nil])
#define postNWithObj(_name,_obj)                    ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:_obj userInfo:nil])
#define postNWithInfo(_name,_info)                  ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:nil userInfo:_info])
